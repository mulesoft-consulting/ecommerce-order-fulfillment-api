<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq" xmlns:api-platform-gw="http://www.mulesoft.org/schema/mule/api-platform-gw" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/api-platform-gw http://www.mulesoft.org/schema/mule/api-platform-gw/current/mule-api-platform-gw.xsd">
    <http:listener-config name="order-fulfillment-api-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration" />
    <apikit:config name="order-fulfillment-api-config" raml="order-fulfillment-api.raml" consoleEnabled="false" doc:name="Router" />
    <http:request-config name="HTTP_Request_Configuration" host="order-system-api-tailor.cloudhub.io" port="80" basePath="/api" doc:name="HTTP Request Configuration" />
    <anypoint-mq:config name="Anypoint_MQ_Configuration" doc:name="Anypoint MQ Configuration">
        <anypoint-mq:provider url="https://mq-us-east-1.anypoint.mulesoft.com/api/v1" clientId="4ddbf4077e7a4959b9b18c0daa350f26" clientSecret="eD73621213C3482db3Dd7eF5F2e94537" />
    </anypoint-mq:config>
    <queued-asynchronous-processing-strategy name="Queued_Asynchronous_Processing_Strategy" doc:name="Queued Asynchronous Processing Strategy" />
    <api-platform-gw:api apiName="groupId:de6ca85b-7dfb-44bc-abb4-388e2dfad3d0:assetId:order-fulfillment-api" version="v1.0:11720515" flowRef="order-fulfillment-api-main" create="true" apikitRef="order-fulfillment-api-config" doc:name="API Autodiscovery" />
    <flow name="order-fulfillment-api-main">
        <http:listener config-ref="order-fulfillment-api-httpListenerConfig" path="/api/*" doc:name="HTTP" />
        <apikit:router config-ref="order-fulfillment-api-config" doc:name="APIkit Router" />
        <exception-strategy ref="order-fulfillment-api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy" />
    </flow>
    <flow name="order-fulfillment-api-console">
        <http:listener config-ref="order-fulfillment-api-httpListenerConfig" path="/console/*" doc:name="HTTP" />
        <apikit:console config-ref="order-fulfillment-api-config" doc:name="APIkit Console" />
    </flow>
    <flow name="post:/orders:application/json:order-fulfillment-api-config">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <set-variable variableName="customerId" value="#[payload.customerId]" doc:name="Variable" />
        <dw:transform-message doc:name="Transform Message" metadata:id="01af9d31-857c-4ac1-a3b2-333ee6c33387">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%function createProduct(row) {
deliveryMethod: row.location.deliveryMethod,
locationId: row.location.locationId,
orderItemId: row.itemId,
productId: row.productId,
productName: row.name,
quantity: row.quantity
}
---
{
	price: payload.price,
	status: "Draft",
	orderId: payload.orderId,
	orderItems: {
		pickupItems: payload.orderItems filter ($.location.locationType == "STORE") map ((row, indexOfRow) -> {
			(createProduct(row))
		}),
		shipmentItems: payload.orderItems filter ($.location.locationType == "WAREHOUSE") map ((row, indexOfRow) -> {
			(createProduct(row))
		}),
		partnersItems: payload.orderItems filter ($.location.locationType == "PARTNER") map ((row, indexOfRow) -> {
			(createProduct(row))
		})
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger" />
        <http:request config-ref="HTTP_Request_Configuration" path="/orders/customer/{customerId}" method="POST" doc:name="Post Order to Fulfillment API" metadata:id="3f4e7c7c-5db1-4370-b31a-65fdd3c81535">
            <http:request-builder>
                <http:uri-param paramName="customerId" value="#[flowVars.customerId]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	status: "created",
	orderId: payload.orderId,
	message: payload.message,
	email: "ecommerce.sfdc@gmail.com"
}]]></dw:set-payload>
        </dw:transform-message>
        <anypoint-mq:publish config-ref="Anypoint_MQ_Configuration" destination="order-email-notification-queue" doc:name="Anypoint MQ" />
    </flow>
    <flow name="put:/orders/{id}/status:order-fulfillment-api-config">
        <http:request config-ref="HTTP_Request_Configuration" path="/orders/{id}/status" method="PUT" doc:name="Update Order Status">
            <http:request-builder>
                <http:uri-param paramName="id" value="#[message.inboundProperties[&quot;http.uri.params&quot;].id]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="get:/orders/{id}/status:order-fulfillment-api-config">
        <http:request config-ref="HTTP_Request_Configuration" path="/orders/{id}/status" method="GET" doc:name="Get Order Status">
            <http:request-builder>
                <http:uri-param paramName="id" value="#[message.inboundProperties[&quot;http.uri.params&quot;].id]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <apikit:mapping-exception-strategy name="order-fulfillment-api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
